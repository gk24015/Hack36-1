var mongoose = require('mongoose');

var ProposalSchema = new mongoose.Schema({
    title : {
        type: String,
        required: true
    },
    organization: {
        type: String,
        required: true
    },
    description: {
        type: String,
        required: true
    },
    contact: {
        type: String,
    },
    deadline: {
        type: Date,
        required: true
    },
    createdAt: {
        type: Date,
        default: Date.now
    },
    createId: {
        type: String,
        required: true
    },
    coverImage: {
        type: Buffer
    },
    coverImageType: {
        type: String,
    },
    developerId : [String],
    chat: [{
        text: String,
        sender: String,
        typer: String
    }],
    video: [{
        sender: String,
        date: String,
        typer: String,
    }],
    githubRepoName: {
        type: String,
    },
    githubUserName: {
        type: String,
    }
})

const defaultData = "data: image/jpeg; charset=utf-8; base64, "

ProposalSchema.virtual('coverImagePath').get(function() {
    if(this.coverImage != null && this.coverImageType != null)
        return `data: ${this.coverImageType}; charset=utf-8; base64, ${this.coverImage.toString('base64')}`
    else
        return defaultData;
})

module.exports = mongoose.model('Proposals', ProposalSchema);